"use strict";

/*
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/
const {
  RawSource
} = require('webpack-sources');

const {
  SingleEntryPlugin
} = require('webpack');

const replaceAndUpdateSourceMap = require('workbox-build/build/lib/replace-and-update-source-map');

const stringify = require('fast-json-stable-stringify');

const upath = require('upath');

const validate = require('workbox-build/build/lib/validate-options');

const webpackInjectManifestSchema = require('workbox-build/build/options/schema/webpack-inject-manifest');

const getManifestEntriesFromCompilation = require('./lib/get-manifest-entries-from-compilation');

const getSourcemapAssetName = require('./lib/get-sourcemap-asset-name');

const relativeToOutputPath = require('./lib/relative-to-output-path'); // Used to keep track of swDest files written by *any* instance of this plugin.
// See https://github.com/GoogleChrome/workbox/issues/2181


const _generatedAssetNames = new Set();
/**
 * This class supports compiling a service worker file provided via `swSrc`,
 * and injecting into that service worker a list of URLs and revision
 * information for precaching based on the webpack asset pipeline.
 *
 * Use an instance of `InjectManifest` in the
 * [`plugins` array](https://webpack.js.org/concepts/plugins/#usage) of a
 * webpack config.
 *
 * @memberof module:workbox-webpack-plugin
 */


class InjectManifest {
  